{"version":3,"sources":["components/Note.js","components/Notification.js","services/note.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","console","log","content","onClick","Notification","message","className","axios","get","then","response","data","newObject","post","id","put","respond","App","useState","notes","setNotes","newNote","setNewNote","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","map","i","key","find","changedNote","returnedNote","catch","error","alert","filter","setTimeout","toggleImportanceOf","onSubmit","e","preventDefault","noteObject","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"2NAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UAAY,qBAAuB,iBAGtD,OAFAC,QAAQC,MAGJ,4BACKL,EAAKM,QADV,IACmB,4BAAQC,QAASN,GAAmBC,KCMhDM,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,yBAAKC,UAAU,SACVD,I,gBCSE,EAfA,WAEX,OADgBE,IAAMC,IAHV,cAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KARV,aAQwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAbJ,aAaI,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAO,GAAO,OAAIA,EAAQL,SC4D5BM,EArEH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAG0BJ,mBAAS,SAHnC,mBAGPK,EAHO,KAGOC,EAHP,KAadC,qBARa,WACTzB,QAAQC,IAAI,UACZyB,IACKjB,MAAK,SAAAkB,GACF3B,QAAQC,IAAI,qBACZmB,EAASO,QAGL,IAwChB,OACI,6BACI,qCACA,kBAAC,EAAD,CAActB,QAASkB,IACvB,uCACA,4BACKJ,EAAMS,KAAI,SAAChC,EAAMiC,GAAP,OAAa,kBAAC,EAAD,CAAMC,IAAKD,EAAGjC,KAAMA,EAAMC,iBAAkB,kBAxBrD,SAACiB,GACxB,IAAMlB,EAAOuB,EAAMY,MAAK,SAAAnC,GAAI,OAAIA,EAAKkB,KAAOA,KACtCkB,EAAW,eAAOpC,EAAP,CAAaG,WAAYH,EAAKG,YAE/C2B,EAAmBZ,EAAIkB,GAAavB,MAAK,SAAAwB,GACrCb,EAASD,EAAMS,KAAI,SAAAhC,GAAI,OAAIA,EAAKkB,KAAOA,EAAKlB,EAAOqC,SAEtDC,OAAM,SAAAC,GACHC,MAAM,YAAD,OAAaxC,EAAKM,QAAlB,yCACLkB,EAASD,EAAMkB,QAAO,SAAAzC,GAAI,OAAIA,EAAKkB,KAAOA,MAC1CU,EAAgB,GAAD,OAAI5B,EAAKM,QAAT,qBAEfoC,YAAW,WACPd,EAAgB,QACjB,QAU2Ee,CAAmB3C,EAAKkB,WAEtG,0BAAM0B,SAzCE,SAACC,GACbA,EAAEC,iBACF,IAAMC,EAAa,CACfzC,QAASmB,EACTV,MAAM,IAAIiC,MAAOC,cACjB9C,UAAW+C,KAAKC,SAAW,GAC3BjC,GAAIK,EAAM6B,OAAS,GAGvBtB,EAAmBiB,GAAYlC,MAAK,SAAAwB,GAChCb,EAASD,EAAM8B,OAAOhB,IACtBX,EAAW,SA+BP,2BAAO4B,MAAO7B,EAAS8B,SA/CZ,SAACV,GACpBzC,QAAQC,IAAIwC,EAAEW,OAAOF,OACrB5B,EAAWmB,EAAEW,OAAOF,UA8CZ,4BAAQG,KAAK,UAAb,W,MC/DhBC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.7cadf777.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important ? 'make not important' : 'make important'\n    console.log()\n    \n    return (\n        <li>\n            {note.content} <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\n\nexport default Note","import React from 'react';\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(respond => respond.data)\n}\n\nexport default {\n    getAll,\n    create,\n    update,\n}","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\n\nimport noteService from './services/note'\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [errorMessage, setErrorMessage] = useState('error');\n\n    const hook = () => {\n        console.log('effect')\n        noteService.getAll()\n            .then(initialNotes => {\n                console.log('promise fulfilled')\n                setNotes(initialNotes)\n            })\n    }\n    useEffect(hook, [])\n\n    const handleOnChange = (e) => {\n        console.log(e.target.value)\n        setNewNote(e.target.value)\n    }\n\n    const addNote = (e) => {\n        e.preventDefault()\n        const noteObject = {\n            content: newNote,\n            data: new Date().toISOString(),\n            important: Math.random() > 0.5,\n            id: notes.length + 1\n        }\n\n        noteService.create(noteObject).then(returnedNote => {\n            setNotes(notes.concat(returnedNote))\n            setNewNote('')\n        })\n    }\n\n    const toggleImportanceOf = (id) => {\n        const note = notes.find(note => note.id === id)\n        const changedNote = {...note, important: !note.important}\n\n        noteService.update(id, changedNote).then(returnedNote => {\n            setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n        })\n        .catch(error => {\n            alert(`the note ${note.content} was already deleted from the server`)\n            setNotes(notes.filter(note => note.id !== id))\n            setErrorMessage(`${note.content} already deleted`)\n            \n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n        })\n    }\n\n    return (\n        <div>\n            <h1>Hello</h1>\n            <Notification message={errorMessage} />\n            <h1> Notes </h1>\n            <ul>\n                {notes.map((note, i) => <Note key={i} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>)}\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleOnChange}/>\n                <button type=\"submit\">save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}